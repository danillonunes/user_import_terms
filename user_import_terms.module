<?php

/**
 * Implementation of hook_user_import_form_fieldsets().
 */
function user_import_terms_user_import_form_fieldset($import, $collapsed) {
  $vocabularies = variable_get('user_terms_vocabs', array());

  $form['user_terms'] = array(
    '#type' => 'fieldset',
    '#title' => t('User terms'),
    '#collapsible' => TRUE,
    '#collapsed' => $collapsed,
  );

  if (empty($vocabularies)) {
    $form['user_terms']['#description'] = t('No user terms have been defined.');
  }
  else {
    // Set a hidden value on the form listing the vocabularies we are editing
    // here, so that we can check in user_terms_save_profile() and avoid
    // clobbering terms from other vocabularies.
    // This is an array whose keys are the vids, and values are either also
    // the $vid, or the string 'tags' if the particular vocabulary is tags, ie:
    //    $vid => (either $vid or 'tags')
    $form['user_terms_vids'] = array(
      '#type' => 'value',
      '#value' => array(), // We will fill this in as we handle each vocab.
    );

    foreach ($vocabularies as $vid) {
      $vocabulary = taxonomy_vocabulary_load($vid);

      // Tags need special handling.
      if ($vocabulary->tags) {

        if ($vocabulary->help) {
          $help = filter_xss_admin($vocabulary->help);
        }
        else {
          $help = t('A comma-separated list of terms describing this content. Example: funny, bungee jumping, "Company, Inc.".');
        }
 
        $form['user_terms']['user_terms_' . $vocabulary->vid] = array('#type' => 'textfield',
          '#title' => check_plain($vocabulary->name),
          '#description' => $help,
          '#autocomplete_path' => 'taxonomy/autocomplete/' . $vocabulary->vid,
          '#weight' => $vocabulary->weight,
          '#maxlength' => 1024,
        );
        
        // Add this vid to the hidden value, indicating it uses tags.
        $form['user_terms_vids']['#value'][$vid] = 'tags';
      }
      else {
        // Use taxonomy module's form element builder function.
        $form['user_terms']['user_terms_' . $vid]  = taxonomy_form($vid, array_keys($default_terms), NULL, 'taxonomy');
        $form['user_terms']['user_terms_' . $vid]['#weight'] = $vocabulary->weight;
        $form['user_terms']['user_terms_' . $vid]['#required'] = $vocabulary->required;
        
        // Add this vid to the hidden value.
        $form['user_terms_vids']['#value'][$vid] = $vid;
      }

    }
  }

  return $form;
}

/**
 * Implementation of hook_user_import_after_save().
 */
function user_import_terms_user_import_after_save($settings, $account, $password, $fields, $updated, $update_setting_per_module) {
  if (isset($settings['user_terms_vids'])) {
    $edited_vids = array_keys($edit['user_terms_vids']);
    $vids = variable_get('user_terms_vocabs', array());

    // Merge all terms into one array
    $user_terms = array();
    foreach ($vids as $vid) {
      // Tags need special handling.
      if ($settings['user_terms_vids'][$vid] == 'tags') {
        // Free tags come in a string without tids
        $input_tags = drupal_explode_tags($settings['user_terms_' . $vid]);

        foreach ($input_tags as $input_tag) {
          // See if the term exists in the chosen vocabulary
          // and return the tid; otherwise, add a new record.
          $possibilities = taxonomy_get_term_by_name($input_tag);
          $input_tag_tid = NULL; // tid match, if any.
          foreach ($possibilities as $possibility) {
            if ($possibility->vid == $vid) {
              $input_tag_tid = $possibility->tid;
            }
          }

          if (!$input_tag_tid) {
            $t = array('vid' => $vid, 'name' => $input_tag);
            $status = taxonomy_save_term($t);
            $input_tag_tid = $t['tid'];
          }

          $user_terms[] = $input_tag_tid;
        }
      }
      else {
        // Depending on the type of field widget, this may be an array or a string.
        if (is_array($settings['user_terms_' . $vid])) {
          $user_terms = array_merge($user_terms, (array)$settings['user_terms_' . $vid]);
        }
        else {
          $user_terms[] = $settings['user_terms_' . $vid];
        }
      }
      $settings['user_terms_' . $vid] = NULL;
    }

    // Add into the array the terms already on the account from the vocabularies
    // we did NOT edit: otherwise they will be clobbered by the saving.
    $unedited_vids = array_diff($vids, $edited_vids);
    foreach ($account->user_terms as $tid => $term) {
      if (isset($unedited_vids[$term['vid']])) {
        $user_terms[] = $tid;
      }
    }

    if ($updated) {
      $query = "DELETE FROM {term_user} WHERE uid = %d";
      db_query($query, $account->uid);
    }

    // Persist the new data.
    $query = "INSERT IGNORE INTO {term_user} (uid, tid) VALUES (%d, %d)";

    // Save all terms (except zeros).
    foreach (array_filter($user_terms) as $tid) {
      db_query($query, $account->uid, $tid);
    }
  }
}
